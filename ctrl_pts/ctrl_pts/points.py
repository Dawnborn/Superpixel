# -*- coding: utf-8 -*-
"""points.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GQ8CTxXAikUo19iwGaHHTU1DhLXIdFsX
"""

import pandas as pd
import numpy as np
import os

output_root = '/storage/user/lhao/hjp/ws_superpixel/ctrl_pts/ctrl_pts/'
with open('/storage/user/lhao/hjp/ws_superpixel/ctrl_pts/ctrl_pts/envPixelPointfile.txt') as f:
    lines = f.readlines()

points_set = []
for line in lines:
  row, col = line.strip().split(" ")
  points_set.append([int(row),int(col)])

#points_set

X = np.array(points_set)

from sklearn.neighbors import NearestNeighbors
##########################
neighbors=60
nbrs = NearestNeighbors(n_neighbors=neighbors, algorithm='ball_tree').fit(X)

distances, indices = nbrs.kneighbors(X)
#distances

##########################
distance_threshold = 13
points_path = '/storage/user/lhao/hjp/ws_superpixel/ctrl_pts/ctrl_pts/points_neighbor{}_dist{}.txt'.format(str(neighbors),str(distance_threshold))
with open(points_path,'w') as f:
  for index in range(len(X)):
    distance_max = max(distances[index])
    if distance_max < distance_threshold:
      f.write(str(X[index][0])+' '+str(X[index][1])+'\n')

import cv2
import matplotlib.pyplot as plt
rows = 480
columns = 640
channels = 1
cvImg = np.zeros((rows, columns, channels), dtype = "uint8")

with open(points_path) as f:
    for line in f:
        x, y = line.split()
        cvImg[int(x), int(y), 0] = 255

plt.imshow(cvImg)
cv2.imwrite("/storage/user/lhao/hjp/ws_superpixel/ctrl_pts/ctrl_pts/points_neighbor{}_dist{}.png".format(str(neighbors),str(distance_threshold)),cvImg)